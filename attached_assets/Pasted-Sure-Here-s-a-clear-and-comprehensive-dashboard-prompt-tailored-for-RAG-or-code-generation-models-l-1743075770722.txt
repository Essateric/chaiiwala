Sure! Here's a clear and comprehensive dashboard prompt tailored for RAG or code generation models like **rpelit**, based on your project requirements for the **Chaiiwala Dashboard**:

---

### ðŸ§  Prompt for rpelit â€“ Dashboard Generation

You are building a **full-stack dashboard** for a multi-location food & beverage brand, **Chaiiwala**. This dashboard will help **Admins, Regional Managers, Store Managers, and Staff** manage:

- **Inventory & Stock**
- **Staff Scheduling**
- **Store Performance**
- **Tasks and Checklists**
- **Communications and Announcements**

#### âœ… Key Functional Requirements:

1. **User Roles & Permissions**
   - **Admin**: Full access (add/remove users, assign roles, view all data)
   - **Regional Manager**: Access to stores in their region
   - **Store Manager**: Manage their specific locationâ€™s staff, stock, and checklists
   - **Staff**: View tasks and schedules, mark checklists

2. **Stock Management**
   - Editable, filterable inventory list
   - Integration with **Google Sheets or Airtable**
   - Low stock alerts
   - Stock requests and fulfillment tracking

3. **Staff Calendar**
   - Drag-and-drop schedule calendar
   - Weekly view with shift times
   - Staff availability
   - Leave management

4. **Weekly Checklists**
   - Role-based daily/weekly checklists (e.g. open/close procedures)
   - Auto-resets each week
   - Completion tracking (checkboxes, timestamp)

5. **Tasks**
   - Assign tasks by role/store
   - Due dates, status (To Do, In Progress, Done)
   - Optional notification system

6. **Announcements & Communication**
   - Bulletin board for important updates
   - Optional push/email alerts

#### ðŸŽ¨ Design Requirements:

- Styled using **Chaiiwala branding** (from [chaiiwala.co.uk](https://chaiiwala.co.uk/))  
  - Black, white, and gold accents
  - Clean, modern aesthetic with cultural elements

#### ðŸ”Œ Tech Stack Requirements:

- **Frontend**: React (with Tailwind CSS or Chakra UI)
- **Backend**: Node.js + Express (or Supabase/Firebase if preferred)
- **Database**: Airtable or Google Sheets integration (editable, real-time sync)
- **Auth**: Role-based login (email/password or magic link)
- **Hosting**: GitHub + Netlify (frontend), backend on Railway or Vercel

#### ðŸ“Ž Bonus Features (optional):
- KPI dashboards per location (sales, orders, staff performance)
- Printable reports
- Mobile responsiveness

#### ðŸ“‚ Output Format

- React frontend code (clean, modular components)
- Backend API endpoints
- Airtable/Google Sheets schema if used
- Setup instructions (env, dependencies, deploy)

---

Would you like this turned into a JSON schema or passed as a config file for automation next?